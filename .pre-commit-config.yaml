# Pre-commit configuration for Python Project Creator
# See https://pre-commit.com for more information

repos:
  # Ruff - Fast Python linter and formatter
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.12.3
    hooks:
      # Run the linter
      - id: ruff
        args: [--fix, --exit-non-zero-on-fix]
        types_or: [python, pyi, jupyter]
      # Run the formatter
      - id: ruff-format
        types_or: [python, pyi, jupyter]

  # Built-in hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      # Check for files that would conflict on case-insensitive filesystems
      - id: check-case-conflict
      # Check for files that contain merge conflict strings
      - id: check-merge-conflict
      # Check for debugger imports and py37+ `breakpoint()` calls
      - id: debug-statements
      # Check YAML files for parseable syntax
      - id: check-yaml
      # Check JSON files for parseable syntax
      - id: check-json
      # Check TOML files for parseable syntax
      - id: check-toml
      # Check for files that would conflict on case-insensitive filesystems
      - id: check-added-large-files
        args: [--maxkb=1000]
      # Check for private keys
      - id: detect-private-key
      # Ensure files end with a newline
      - id: end-of-file-fixer
      # Remove trailing whitespace
      - id: trailing-whitespace
      # Sort requirements.txt files
      - id: requirements-txt-fixer
      # Check Python AST
      - id: check-ast

  # MyPy static type checker
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        files: ^create_project/
        additional_dependencies: [
          pydantic>=2.0.0,
          types-requests,
          types-PyYAML,
          types-python-dateutil,
        ]
        args: [--ignore-missing-imports, --show-error-codes]

  # Security checks
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: ['-c', 'pyproject.toml']
        additional_dependencies: ['bandit[toml]']

  # Commit message format check
  - repo: https://github.com/compilerla/conventional-pre-commit
    rev: v3.0.0
    hooks:
      - id: conventional-pre-commit
        stages: [commit-msg]
        args: [--strict]

  # Check for secrets
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: ['--baseline', '.secrets.baseline']
        exclude: ^(\.secrets\.baseline|\.env\.example)$

  # Spell check
  - repo: https://github.com/codespell-project/codespell
    rev: v2.2.6
    hooks:
      - id: codespell
        args: [--write-changes]
        exclude: ^(\.git/|\.mypy_cache/|\.pytest_cache/|\.ruff_cache/|\.venv/|build/|dist/|logs/|\.secrets\.baseline)

  # Shell script linting
  - repo: https://github.com/koalaman/shellcheck-precommit
    rev: v0.9.0
    hooks:
      - id: shellcheck
        files: \.(sh|bash)$

  # Markdown linting
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.37.0
    hooks:
      - id: markdownlint
        args: [--fix]
        exclude: ^(\.github/|CHANGELOG\.md)

# Configuration for specific hooks
ci:
  autofix_commit_msg: |
    style: auto fixes from pre-commit hooks

    ðŸ¤– Generated with [Claude Code](https://claude.ai/code)
  autoupdate_commit_msg: |
    chore: pre-commit autoupdate

    ðŸ¤– Generated with [Claude Code](https://claude.ai/code)