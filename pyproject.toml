[project]
name = "create-project"
version = "0.1.0"
description = "A PyQt-based GUI application for creating Python project structures"
authors = [{name = "FX", email = "fx@example.com"}]
license = {text = "Apache-2.0"}
readme = "README.md"
requires-python = ">=3.9.6"
keywords = ["python", "project", "template", "gui", "pyqt"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "chardet>=5.2.0",
    "colorlog>=6.9.0",
    "cryptography>=45.0.5",
    "httpx>=0.25.0",
    "jinja2>=3.1.6",
    "jsonschema>=4.24.0",
    "platformdirs>=4.3.8",
    "pydantic>=2.11.7",
    "pyqt6>=6.7.0",
    "pytest-qt>=4.5.0",
    "python-dotenv>=1.1.1",
    "pyyaml>=6.0.2",
    "requests>=2.32.4",
    "structlog>=25.4.0",
    "watchdog>=6.0.0",
]

[dependency-groups]
dev = [
    "memory-profiler>=0.61.0",
    "mypy>=1.17.0",
    "pre-commit>=4.2.0",
    "py-spy>=0.4.0",
    "pytest>=8.4.1",
    "pytest-asyncio>=0.23.0",
    "pytest-benchmark>=5.1.0",
    "pytest-cov>=6.2.1",
    "pytest-mock>=3.14.1",
    "pytest-qt>=4.5.0",
    "ruff>=0.12.3",
]

[project.scripts]
create-project = "create_project.main:main"
create-project-gui = "create_project.gui.app:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
line-length = 88
exclude = [
    "create_project/templates/builtin/template_files/**",
]

[tool.ruff.lint]
select = ["E", "F", "W", "C90", "I", "N", "UP", "B", "A", "S", "FBT", "Q"]

[tool.mypy]
python_version = "3.9"
strict = true
exclude = ["create_project/templates/builtin/template_files/.*"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
markers = [
    "integration: mark test as an integration test",
    "slow: mark test as slow running",
    "requires_network: mark test as requiring network access",
    "benchmark: mark test as a performance benchmark",
    "memory: mark test as a memory usage test",
    "stress: mark test as a stress test",
    "gui: mark test as a GUI test",
    "automation: mark test as an automation test",
    "workflow: mark test as a workflow test",
]
addopts = [
    "--strict-markers",
    "-ra",
]
